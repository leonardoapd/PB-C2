/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerInventario;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leonardo Perdomo
 */
public final class FrmViewGestorInventario extends javax.swing.JInternalFrame {

    private final ControllerInventario controlInventario;
    DefaultTableModel modeloTablaInventario = new DefaultTableModel();
    DefaultComboBoxModel modeloCbox = new DefaultComboBoxModel();

    /**
     * Creates new form FrmViewInventario
     */
    public FrmViewGestorInventario() {
        controlInventario = new ControllerInventario();
        initComponents();
        //refrescarTabla(2);
        insertarModeloCBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gestorInventario = new javax.swing.JPanel();
        panelInventario = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableInventario = new javax.swing.JTable();
        actualizarInventarioBtn = new javax.swing.JButton();
        labelIdProveedor = new javax.swing.JLabel();
        textFieldIdProveedor = new javax.swing.JTextField();
        labelNombreProveedor = new javax.swing.JLabel();
        listaProveedorCbox = new javax.swing.JComboBox<>();
        labelIdProducto = new javax.swing.JLabel();
        textFieldIdProducto = new javax.swing.JTextField();
        buscarProductoBtn = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Gestor de Inventario");

        panelInventario.setBorder(javax.swing.BorderFactory.createTitledBorder("Inventario"));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        tableInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Unidad de Medida", "Precio", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableInventario.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tableInventario);
        if (tableInventario.getColumnModel().getColumnCount() > 0) {
            tableInventario.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableInventario.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        javax.swing.GroupLayout panelInventarioLayout = new javax.swing.GroupLayout(panelInventario);
        panelInventario.setLayout(panelInventarioLayout);
        panelInventarioLayout.setHorizontalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        panelInventarioLayout.setVerticalGroup(
            panelInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        actualizarInventarioBtn.setText("Actualizar Inventario");
        actualizarInventarioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarInventarioBtnActionPerformed(evt);
            }
        });

        labelIdProveedor.setText("ID Provedor:");

        textFieldIdProveedor.setEditable(false);

        labelNombreProveedor.setText("Proveedor:");

        listaProveedorCbox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listaProveedorCboxFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                listaProveedorCboxFocusLost(evt);
            }
        });
        listaProveedorCbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaProveedorCboxMouseClicked(evt);
            }
        });
        listaProveedorCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaProveedorCboxActionPerformed(evt);
            }
        });

        labelIdProducto.setText("ID Producto:");

        buscarProductoBtn.setText("Buscar");
        buscarProductoBtn.setToolTipText("Buscar producto para agregar");
        buscarProductoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarProductoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gestorInventarioLayout = new javax.swing.GroupLayout(gestorInventario);
        gestorInventario.setLayout(gestorInventarioLayout);
        gestorInventarioLayout.setHorizontalGroup(
            gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestorInventarioLayout.createSequentialGroup()
                .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gestorInventarioLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(actualizarInventarioBtn)
                            .addGroup(gestorInventarioLayout.createSequentialGroup()
                                .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelIdProducto)
                                    .addComponent(labelIdProveedor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textFieldIdProducto)
                                    .addComponent(textFieldIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(gestorInventarioLayout.createSequentialGroup()
                                        .addComponent(labelNombreProveedor)
                                        .addGap(18, 18, 18)
                                        .addComponent(listaProveedorCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(buscarProductoBtn))))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, gestorInventarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(panelInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        gestorInventarioLayout.setVerticalGroup(
            gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gestorInventarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIdProveedor)
                    .addComponent(labelNombreProveedor)
                    .addComponent(listaProveedorCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldIdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(gestorInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIdProducto)
                    .addComponent(buscarProductoBtn)
                    .addComponent(textFieldIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actualizarInventarioBtn)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(gestorInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 22, Short.MAX_VALUE)
                .addComponent(gestorInventario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarProductoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarProductoBtnActionPerformed
        try {
            String idProducto = textFieldIdProducto.getText();
            String[][] productoEncontrado = controlInventario.buscar(Integer.parseInt(idProducto));
            String[][] matrizProducto = new String[1][4];
            matrizProducto[0][0] = productoEncontrado[0][0];
            matrizProducto[0][1] = productoEncontrado[0][1];
            matrizProducto[0][2] = productoEncontrado[0][3];
            refrescarTabla(2, matrizProducto);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se ha podido encontrar el producto.");
        }
    }//GEN-LAST:event_buscarProductoBtnActionPerformed

    private void listaProveedorCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaProveedorCboxActionPerformed
        try {
            String seleccionado = listaProveedorCbox.getSelectedItem().toString();
            int idProveedor = controlInventario.obtenerNombreProveedor(seleccionado);
            textFieldIdProveedor.setText(idProveedor + "");
            System.out.println("El elemento seleccionado es:" + seleccionado);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_listaProveedorCboxActionPerformed

    private void listaProveedorCboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaProveedorCboxMouseClicked
        // TODO add your handling code here:
        //insertarModeloCBox();
    }//GEN-LAST:event_listaProveedorCboxMouseClicked

    private void listaProveedorCboxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaProveedorCboxFocusLost
        //listaProveedorCbox.removeAllItems();
    }//GEN-LAST:event_listaProveedorCboxFocusLost

    private void listaProveedorCboxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaProveedorCboxFocusGained
        listaProveedorCbox.removeAllItems();
        insertarModeloCBox();
    }//GEN-LAST:event_listaProveedorCboxFocusGained

    private void actualizarInventarioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarInventarioBtnActionPerformed
        //refrescarTabla(2);

        String id = (String) tableInventario.getValueAt(0, 0);
        String nombre = (String) tableInventario.getValueAt(0, 1);
        String unidad = (String) tableInventario.getValueAt(0, 2);
        String precio = (String) tableInventario.getValueAt(0, 3);
        String cantidad = (String) tableInventario.getValueAt(0, 4);
        String idProveedor = textFieldIdProveedor.getText();

        try {
            if (precio.equals("null") || cantidad.equals("null")) {
                JOptionPane.showMessageDialog(this, "Por favor realice la busqueda!");
            } else {
                boolean productoActualizado = controlInventario.actualizar(nombre,
                    "", unidad, Integer.parseInt(id), Integer.parseInt(precio),
                    Integer.parseInt(cantidad), Integer.parseInt(idProveedor));
                if (productoActualizado) {
                    JOptionPane.showMessageDialog(this, "El producto ha sido actualizado.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ingrese los datos en Precio y Cantidad.");
        }

    }//GEN-LAST:event_actualizarInventarioBtnActionPerformed

    public void refrescarTabla(int opcion, String[][] registro) {

        switch (opcion) {
            case 1 -> {
                //Se establecen los elementos de la cabecera de la tabla
                String[] cabeceraInventario = {"Id", "Nombre", "Precio", "Cantidad", "Id Provedor", "Descripcion"};
                //Se recogen los datos de los clientes añadidos en el almacenamiento temporal
                String[][] matrizInventario = controlInventario.refrescarTablaInventario();
                //Se agregan los datos y la cabecera de la tabla al modelo
                modeloTablaInventario.setDataVector(matrizInventario, cabeceraInventario);
                //Se agrega el modelo a la vista
                tableInventario.setModel(modeloTablaInventario);
                if (tableInventario.getColumnModel().getColumnCount() > 0) {
                    tableInventario.getColumnModel().getColumn(0).setPreferredWidth(30);
                    tableInventario.getColumnModel().getColumn(5).setPreferredWidth(300);
                }
            }
            case 2 -> {
                String[] cabeceraInventario = {"Id", "Nombre", "Unidad de Medida", "Precio", "Cantidad"};

                modeloTablaInventario.setDataVector(registro, cabeceraInventario);
                tableInventario.setModel(modeloTablaInventario);
                if (tableInventario.getColumnModel().getColumnCount() > 0) {
                    tableInventario.getColumnModel().getColumn(0).setPreferredWidth(30);
                    tableInventario.getColumnModel().getColumn(1).setPreferredWidth(120);
                    tableInventario.getColumnModel().getColumn(2).setPreferredWidth(120);
                }

            }

        }

    }

    public void redimensionarTabs() {

    }

    public void insertarModeloCBox() {
        ArrayList<String> listaProveedoresSeleccionador = controlInventario.obtenerListaProveedores();
        modeloCbox.addAll(listaProveedoresSeleccionador);
        listaProveedorCbox.setModel(modeloCbox);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarInventarioBtn;
    private javax.swing.JButton buscarProductoBtn;
    private javax.swing.JPanel gestorInventario;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelIdProducto;
    private javax.swing.JLabel labelIdProveedor;
    private javax.swing.JLabel labelNombreProveedor;
    private javax.swing.JComboBox<String> listaProveedorCbox;
    private javax.swing.JPanel panelInventario;
    protected javax.swing.JTable tableInventario;
    private javax.swing.JTextField textFieldIdProducto;
    private javax.swing.JTextField textFieldIdProveedor;
    // End of variables declaration//GEN-END:variables
}
