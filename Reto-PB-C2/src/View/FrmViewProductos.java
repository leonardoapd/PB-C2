/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerInventario;
//import java.awt.Toolkit; //Importacion para usar el sonido de Windows cuando se presione enter
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leonardo Perdomo
 * Implemento el KeyListener para escuchar eventos de teclado
 * y capturar cuando se presiona enter en la tabla donde se muestra el listado de los productos
 * agregados.
 */
public class FrmViewProductos extends javax.swing.JInternalFrame implements KeyListener {

    /** Se declaran los objetos del controlador de la vista 
     * relacionada con los productos y el modelo de la tabla 
     * que almacena el listado de productos.
     */
    private final ControllerInventario controlInventario;
    DefaultTableModel modeloTablaProductos = new DefaultTableModel();

    /**
     * Creates new form FrmViewProductos
     */
    public FrmViewProductos() {
        controlInventario = new ControllerInventario();
        initComponents();
        //Obtengo el siguiente ID de Producto en la tabla de la base de datos para mostrarlo en la vista
        textFieldIdProducto.setText(controlInventario.obtenerId());
        refrescarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelCrear = new javax.swing.JPanel();
        labelNombre = new javax.swing.JLabel();
        labelIdProducto = new javax.swing.JLabel();
        textFieldNombre = new javax.swing.JTextField();
        textFieldIdProducto = new javax.swing.JTextField();
        agregarBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaDescripcion = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaDescripcion2 = new javax.swing.JTextArea();
        unidadMedidaCbox = new javax.swing.JComboBox<>();
        labelUnidadMedida = new javax.swing.JLabel();
        panelBuscar = new javax.swing.JPanel();
        labelNombreB = new javax.swing.JLabel();
        labelIdProductoB = new javax.swing.JLabel();
        textFieldNombreB = new javax.swing.JTextField();
        textFieldIdProductoB = new javax.swing.JTextField();
        buscarBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaDescripcionB = new javax.swing.JTextArea();
        unidadMedidaBCbox = new javax.swing.JComboBox<>();
        labelUnidadMedida1 = new javax.swing.JLabel();
        actualizarBtn = new javax.swing.JButton();
        borrarBtn = new javax.swing.JButton();
        panelLista = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableProductos = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Gestor de Productos");

        labelNombre.setText("Nombre: ");

        labelIdProducto.setText("ID:");

        textFieldIdProducto.setEditable(false);

        agregarBtn.setText("Agregar");
        agregarBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        agregarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarBtnActionPerformed(evt);
            }
        });

        textAreaDescripcion.setColumns(20);
        textAreaDescripcion.setRows(5);
        textAreaDescripcion.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripci칩n"));
        jScrollPane1.setViewportView(textAreaDescripcion);

        textAreaDescripcion2.setColumns(20);
        textAreaDescripcion2.setRows(5);
        textAreaDescripcion2.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripci칩n"));
        jScrollPane3.setViewportView(textAreaDescripcion2);

        unidadMedidaCbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kg", "gr", "Ton", "cm3", "Unidad" }));

        labelUnidadMedida.setText("Unidad de Medida:");

        javax.swing.GroupLayout panelCrearLayout = new javax.swing.GroupLayout(panelCrear);
        panelCrear.setLayout(panelCrearLayout);
        panelCrearLayout.setHorizontalGroup(
            panelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCrearLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelCrearLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCrearLayout.createSequentialGroup()
                        .addGroup(panelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelCrearLayout.createSequentialGroup()
                                .addComponent(labelUnidadMedida)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(unidadMedidaCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelCrearLayout.createSequentialGroup()
                                .addComponent(labelNombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelIdProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldIdProducto))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        panelCrearLayout.setVerticalGroup(
            panelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCrearLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelUnidadMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unidadMedidaCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(agregarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Resources/a침adir-producto-24px.png")), panelCrear, "Crear Producto"); // NOI18N

        labelNombreB.setText("Nombre: ");

        labelIdProductoB.setText("ID:");

        buscarBtn.setText("Buscar");
        buscarBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        buscarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBtnActionPerformed(evt);
            }
        });

        textAreaDescripcionB.setColumns(20);
        textAreaDescripcionB.setRows(5);
        textAreaDescripcionB.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripci칩n"));
        jScrollPane2.setViewportView(textAreaDescripcionB);

        unidadMedidaBCbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kg", "gr", "Ton", "cm3", "Unidad" }));

        labelUnidadMedida1.setText("Unidad de Medida:");

        actualizarBtn.setText("Actualizar");
        actualizarBtn.setToolTipText("");
        actualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBtnActionPerformed(evt);
            }
        });

        borrarBtn.setText("Borrar");

        javax.swing.GroupLayout panelBuscarLayout = new javax.swing.GroupLayout(panelBuscar);
        panelBuscar.setLayout(panelBuscarLayout);
        panelBuscarLayout.setHorizontalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBuscarLayout.createSequentialGroup()
                        .addComponent(borrarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(246, 246, 246)
                        .addComponent(actualizarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBuscarLayout.createSequentialGroup()
                        .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelBuscarLayout.createSequentialGroup()
                                .addComponent(labelUnidadMedida1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(unidadMedidaBCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelBuscarLayout.createSequentialGroup()
                                .addComponent(labelNombreB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldNombreB, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBuscarLayout.createSequentialGroup()
                                .addComponent(labelIdProductoB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldIdProductoB))
                            .addGroup(panelBuscarLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(buscarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        panelBuscarLayout.setVerticalGroup(
            panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombreB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldNombreB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIdProductoB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldIdProductoB, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelUnidadMedida1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unidadMedidaBCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(panelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(actualizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(borrarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Resources/buscar-producto-24px.png")), panelBuscar, "Buscar Producto"); // NOI18N

        tableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableProductos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tableProductos.addKeyListener(this);
        jScrollPane4.setViewportView(tableProductos);

        javax.swing.GroupLayout panelListaLayout = new javax.swing.GroupLayout(panelLista);
        panelLista.setLayout(panelListaLayout);
        panelListaLayout.setHorizontalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 427, Short.MAX_VALUE)
            .addGroup(panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelListaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                    .addGap(8, 8, 8)))
        );
        panelListaLayout.setVerticalGroup(
            panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
            .addGroup(panelListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelListaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("", new javax.swing.ImageIcon(getClass().getResource("/Resources/registros-24px.png")), panelLista, "Lista de Productos"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarBtnActionPerformed
        /**
         * Se recoje la informacion de la vista, textfields y combobox
         */
        String nombre = textFieldNombre.getText();
        String idProducto = textFieldIdProducto.getText();
        String descripcion = textAreaDescripcion.getText();
        String unidadMedida = "";

        switch (unidadMedidaCbox.getSelectedItem().toString()) {
            case "Kg" ->
                unidadMedida = "Kg";
            case "gr" ->
                unidadMedida = "gr";
            case "Ton" ->
                unidadMedida = "Ton";
            case "cm3" ->
                unidadMedida = "cm3";
            case "Unidad" ->
                unidadMedida = "Unidad";
        }

        /**
         * Se crea una variable booleana para determinar si el producto ha sido agregado con exito.
         * Se invoca el metodo agregarProducto del controlador que a침ade la informacion recopilada
         * a la base de datos en su respectiva tabla.
         */
        boolean productoAgregado = false;
        try {
            productoAgregado = controlInventario.agregarProducto(nombre, descripcion, unidadMedida,
                    Integer.parseInt(idProducto));
            //Se limpian los campos para que quede disponible para rellenar nuevamente
            limpiarCampos(1);
            //Se muestra la tabla con el registro nuevo
            refrescarTabla();
        } catch (Exception e) {
            //Si se presenta un error como el no relleno de los campos, lo muestra
            JOptionPane.showMessageDialog(this, "Por favor rellene todos los campos.");
        }

        if (productoAgregado) {
            //Se muestra un mensaje de exito al crear el producto
            JOptionPane.showMessageDialog(this, "El producto ha sido agregado exitosamente.");
        } else {
            JOptionPane.showMessageDialog(this, "No fue posible agregar el producto al inventario.");
        }
    }//GEN-LAST:event_agregarBtnActionPerformed

    private void buscarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBtnActionPerformed
        /**
         * Para buscar un producto en la base de datos, se ingresa la informacion al campo id.
         * Se invoca el metodo buscar en el controlador y este a su vez lo invoca en el modelo, 
         * que consulta a base de datos, y los datos devueltos se muestran en los textfields y combobox
         */
        try {
            String id = textFieldIdProductoB.getText();
            
            String[][] productoEncontrado = controlInventario.buscar(Integer.parseInt(id));
            textFieldIdProductoB.setText(productoEncontrado[0][0]);
            textFieldNombreB.setText(productoEncontrado[0][1]);
            textAreaDescripcionB.setText(productoEncontrado[0][2]);
            unidadMedidaBCbox.setSelectedItem(productoEncontrado[0][3]);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se ha ingresado el ID para realizar la busqueda del producto.");
        }
    }//GEN-LAST:event_buscarBtnActionPerformed

    private void actualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBtnActionPerformed
        try {
            String nombre = textFieldNombreB.getText();
            String idProducto = textFieldIdProductoB.getText();
            String descripcion = textAreaDescripcionB.getText();
            String unidadMedida = "";

            switch (unidadMedidaBCbox.getSelectedItem().toString()) {
                case "Kg" ->
                    unidadMedida = "Kg";
                case "gr" ->
                    unidadMedida = "gr";
                case "Ton" ->
                    unidadMedida = "Ton";
                case "cm3" ->
                    unidadMedida = "cm3";
                case "Unidad" ->
                    unidadMedida = "Unidad";
            }

            if (nombre.equals("") || descripcion.equals("")) {
                JOptionPane.showMessageDialog(this, "Por favor realice la busqueda!");
            } else {
                boolean productoActualizado = controlInventario.actualizar(nombre,
                        descripcion, unidadMedida, Integer.parseInt(idProducto), 0, 0, 0);
                limpiarCampos(2);
                refrescarTabla();
                if (productoActualizado) {
                    JOptionPane.showMessageDialog(this, "El producto ha sido actualizado.");
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ingrese un ID para realizar una busqueda.");
        }
    }//GEN-LAST:event_actualizarBtnActionPerformed

    public void limpiarCampos(int opcion) {
        //Metodo para limpiar los campos de los paneles de la vista.
        switch (opcion) {
            case 1 -> {
                textFieldNombre.setText("");
                textFieldIdProducto.setText("");
                textAreaDescripcion.setText("");
                textFieldIdProducto.setText(controlInventario.obtenerId());
            }
            case 2 -> {
                textFieldNombreB.setText("");
                textFieldIdProductoB.setText("");
                textAreaDescripcionB.setText("");
            }
        }

    }

    public final void refrescarTabla() {
        //Se establecen los elementos de la cabecera de la tabla
        String[] cabeceraProducto = {"Id", "Nombre", "Unidad de Medida", "Descripcion"};
        //Se recogen los datos de los clientes a침adidos en el almacenamiento temporal
        String[][] matrizProducto = controlInventario.refrescarTablaProducto();
        //Se agregan los datos y la cabecera de la tabla al modelo
        modeloTablaProductos.setDataVector(matrizProducto, cabeceraProducto);
        //Se agrega el modelo a la vista
        tableProductos.setModel(modeloTablaProductos);
        if (tableProductos.getColumnModel().getColumnCount() > 0) {
            tableProductos.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableProductos.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableProductos.getColumnModel().getColumn(3).setPreferredWidth(300);
        }
    }

    /**
     * 
     * Los metodos a continuacion sirven para detectar cuando ha sido presionada la tecla enter dentro de
     * la tabla que lista los productos, para permitir actualizarlos.
     */
    public void keyTyped(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
        int key = e.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            //Toolkit.getDefaultToolkit().beep();
            System.out.println("ENTER Presionado");
            int id = Integer.parseInt((String) modeloTablaProductos.getValueAt(tableProductos.getSelectedRow(), 0));
            String[][] productoEncontrado = controlInventario.buscar(id);
            textFieldIdProductoB.setText(productoEncontrado[0][0]);
            textFieldNombreB.setText(productoEncontrado[0][1]);
            textAreaDescripcionB.setText(productoEncontrado[0][2]);
            unidadMedidaBCbox.setSelectedItem(productoEncontrado[0][3]);
            //Linea para seleccionar una de las pesta침as del jTabbedPane
            jTabbedPane1.setSelectedIndex(1);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarBtn;
    private javax.swing.JButton agregarBtn;
    private javax.swing.JButton borrarBtn;
    private javax.swing.JButton buscarBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelIdProducto;
    private javax.swing.JLabel labelIdProductoB;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelNombreB;
    private javax.swing.JLabel labelUnidadMedida;
    private javax.swing.JLabel labelUnidadMedida1;
    private javax.swing.JPanel panelBuscar;
    private javax.swing.JPanel panelCrear;
    private javax.swing.JPanel panelLista;
    private javax.swing.JTable tableProductos;
    protected javax.swing.JTextArea textAreaDescripcion;
    protected javax.swing.JTextArea textAreaDescripcion2;
    protected javax.swing.JTextArea textAreaDescripcionB;
    protected javax.swing.JTextField textFieldIdProducto;
    protected javax.swing.JTextField textFieldIdProductoB;
    protected javax.swing.JTextField textFieldNombre;
    protected javax.swing.JTextField textFieldNombreB;
    private javax.swing.JComboBox<String> unidadMedidaBCbox;
    private javax.swing.JComboBox<String> unidadMedidaCbox;
    // End of variables declaration//GEN-END:variables
}
